version: "3.8"

services:
  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/var/www
    ports:
      - "8000:8000"
    working_dir: /var/www
    env_file:
      - ./backend/.env
    command: >
      sh -c "
        mkdir -p bootstrap/cache storage/framework/views storage/logs &&
        chmod -R 775 bootstrap/cache storage &&
        chown -R www-data:www-data bootstrap/cache storage &&
        until nslookup mysql; do
          echo 'Waiting for MySQL DNS...';
          sleep 2;
        done;
        until nc -z mysql 3306; do
          echo 'Waiting for MySQL TCP port...';
          sleep 2;
        done;
        composer install &&
        php artisan key:generate &&
        php artisan migrate &&
        php artisan db:seed &&
        php artisan storage:link &&
        php artisan serve --host=0.0.0.0 --port=8000
      "
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
    container_name: nextjs-app
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    env_file:
      - ./frontend/.env
    ports:
      - "3000:3000"
    networks:
      - app-network

  mysql:
    image: mysql:8
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_DATABASE: backend
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis-server
    restart: always
    ports:
      - "6379:6379"
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/logs:/var/log/nginx
      - ./nginx/webroot:/var/www/webroot
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/webroot:/var/www/webroot
    entrypoint: >
      sh -c "trap exit TERM;
            while :; do
              certbot renew --webroot -w /var/www/webroot --quiet;
              sleep 12h & wait $${!};
            done"
    depends_on:
      - nginx
    networks:
      - app-network

volumes:
  mysql_data:
  frontend_node_modules:

networks:
  app-network:
    driver: bridge
